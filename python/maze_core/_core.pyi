# This file is automatically generated by pyo3_stub_gen
# ruff: noqa: E501, F401

import builtins
import typing

class Action:
    class Move(Action):
        __match_args__ = ("id", "velocity",)
        @property
        def id(self) -> builtins.int: ...
        @property
        def velocity(self) -> tuple[builtins.float, builtins.float]: ...
        def __new__(cls, id:builtins.int, velocity:tuple[builtins.float, builtins.float]) -> Action.Move: ...
    
    class PickupFlag(Action):
        __match_args__ = ("id",)
        @property
        def id(self) -> builtins.int: ...
        def __new__(cls, id:builtins.int) -> Action.PickupFlag: ...
    
    class DropFlag(Action):
        __match_args__ = ("id",)
        @property
        def id(self) -> builtins.int: ...
        def __new__(cls, id:builtins.int) -> Action.DropFlag: ...
    
    ...

class AgentState:
    @property
    def id(self) -> builtins.int: ...
    @property
    def position(self) -> tuple[builtins.float, builtins.float]: ...
    @property
    def raycasts(self) -> builtins.list[HitInfo]: ...
    @property
    def flag(self) -> typing.Optional[builtins.int]: ...
    @property
    def max_speed(self) -> builtins.float: ...

class GameState:
    @property
    def agent(self) -> AgentState: ...
    @property
    def total_flags(self) -> builtins.int: ...
    @property
    def collected_flags(self) -> builtins.int: ...
    @property
    def world_width(self) -> builtins.float: ...
    @property
    def world_height(self) -> builtins.float: ...

class HitInfo:
    ...

def run(config:dict, policy:typing.Any) -> None: ...

